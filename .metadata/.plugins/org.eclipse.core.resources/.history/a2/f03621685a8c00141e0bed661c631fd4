package Vjezbe;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;

public class Circle {

	private int x;
	private int y;
	private int radius;
	private boolean isFilled;
	private Color color;
	private int speedX;
	private int speedY;
	private Dimension windowDim;

	public Circle(int x, int y, int radius, boolean isFilled, Color color,
			int speedX, int speedY, Dimension windowDim) {
		
		this.x = x;
		this.y = y;
		this.radius = radius;
		this.isFilled = isFilled;
		this.color = color;
		this.speedX = speedX;
		this.speedY = speedY;
		this.windowDim = windowDim;

	}

	public void draw(Graphics g) {

		move();

		x += speedX;
		y += speedY;

		g.setColor(this.color);
		if (isFilled == true) {
			g.fillOval(this.x, this.y, this.radius, this.radius);
		} else if (isFilled == false) {
			g.drawOval(this.x, this.y, this.radius, this.radius);
		}
	}

	private void move() {
		
		if( x < 0 || x + radius >= windowDim.getWidth())
			speedX *= (-1);
		
		// 24 je razlika izmedju frame i panela
		
		if ( y < 0 || y + radius+24 >= windowDim.getHeight())
			speedY *= (-1);
		
		x += speedX;
		y += speedY;
	}
	
	public void checkColision( Circle other){
		
		int temp = other.x + other.radius;
		
		if ( temp <= this.x){
			speedX *= -1;
		    other.speedX *= -1;
		}
		
		temp = this.x + this.radius;
		
		if ( temp <= other.x){
			speedX *= -1;
			other.speedX *= -1;
		}
		
		int tempY = other.y + other.y;
		
		if ( tempY <= this.y){
			speedY *= -1;
		    other.speedY *= -1;
		}
		
		tempY = other.y + other.radius;
		
		if(  tempY <= other.y){
			speedY *= -1;
		    other.speedY *= -1;
		}
		
		
	}
	
// end of class
}
